{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { VIEW_LIFE_CIRCLE, Event } from '@antv/g2';\nimport { Plot } from '../../core/plot';\nimport { getProgressData } from '../progress/utils';\nimport { adaptor, statistic } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\n\nvar RingProgress =\n/** @class */\nfunction (_super) {\n  __extends(RingProgress, _super);\n\n  function RingProgress() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'ring-process';\n    return _this;\n  }\n  /**\n   * 获取默认配置项\n   * 供外部使用\n   */\n\n\n  RingProgress.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * 更新数据\n   * @param percent\n   */\n\n\n  RingProgress.prototype.changeData = function (percent) {\n    this.chart.emit(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, Event.fromData(this.chart, VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, null));\n    this.updateOption({\n      percent: percent\n    });\n    this.chart.data(getProgressData(percent)); // todo 后续让 G2 层在 afterrender 之后，来重绘 annotations\n\n    statistic({\n      chart: this.chart,\n      options: this.options\n    }, true);\n    this.chart.emit(VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA, Event.fromData(this.chart, VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA, null));\n  };\n\n  RingProgress.prototype.getDefaultOptions = function () {\n    return RingProgress.getDefaultOptions();\n  };\n  /**\n   * 获取 环形进度图 的适配器\n   */\n\n\n  RingProgress.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n\n  return RingProgress;\n}(Plot);\n\nexport { RingProgress };","map":{"version":3,"mappings":";AAAA,SAASA,gBAAT,EAA2BC,KAA3B,QAAwC,UAAxC;AACA,SAASC,IAAT,QAAqB,iBAArB;AAEA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AACA,SAASC,eAAT,QAAgC,aAAhC;;AAIA;AAAA;AAAA;EAAkCC;;EAAlC;IAAA;IASE;;;IACOC,aAAe,cAAf;;EAiCR;EA1CC;;;;;;EAIOC,iCAAP;IACE,OAAOH,eAAP;EACD,CAFM;EAOP;;;;;;EAIOG,oCAAP,UAAkBC,OAAlB,EAAiC;IAC/B,KAAKC,KAAL,CAAWC,IAAX,CACEZ,gBAAgB,CAACa,kBADnB,EAEEZ,KAAK,CAACa,QAAN,CAAe,KAAKH,KAApB,EAA2BX,gBAAgB,CAACa,kBAA5C,EAAgE,IAAhE,CAFF;IAIA,KAAKE,YAAL,CAAkB;MAAEL,OAAO;IAAT,CAAlB;IAEA,KAAKC,KAAL,CAAWK,IAAX,CAAgBb,eAAe,CAACO,OAAD,CAA/B,EAP+B,CAQ/B;;IACAL,SAAS,CAAC;MAAEM,KAAK,EAAE,KAAKA,KAAd;MAAqBM,OAAO,EAAE,KAAKA;IAAnC,CAAD,EAA+C,IAA/C,CAAT;IAEA,KAAKN,KAAL,CAAWC,IAAX,CACEZ,gBAAgB,CAACkB,iBADnB,EAEEjB,KAAK,CAACa,QAAN,CAAe,KAAKH,KAApB,EAA2BX,gBAAgB,CAACkB,iBAA5C,EAA+D,IAA/D,CAFF;EAID,CAfM;;EAiBGT,2CAAV;IACE,OAAOA,YAAY,CAACU,iBAAb,EAAP;EACD,CAFS;EAIV;;;;;EAGUV,0CAAV;IACE,OAAOL,OAAP;EACD,CAFS;;EAGZ;AAAC,CA3CD,CAAkCF,IAAlC","names":["VIEW_LIFE_CIRCLE","Event","Plot","getProgressData","adaptor","statistic","DEFAULT_OPTIONS","__extends","_this","RingProgress","percent","chart","emit","BEFORE_CHANGE_DATA","fromData","updateOption","data","options","AFTER_CHANGE_DATA","getDefaultOptions"],"sources":["E:\\office_react\\Context_Practice\\Context-Frontent_practice\\node_modules\\@antv\\g2plot\\src\\plots\\ring-progress\\index.ts"],"sourcesContent":["import { VIEW_LIFE_CIRCLE, Event } from '@antv/g2';\nimport { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { getProgressData } from '../progress/utils';\nimport { RingProgressOptions } from './types';\nimport { adaptor, statistic } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\n\nexport type { RingProgressOptions };\n\nexport class RingProgress extends Plot<RingProgressOptions> {\n  /**\n   * 获取默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<RingProgressOptions> {\n    return DEFAULT_OPTIONS;\n  }\n\n  /** 图表类型 */\n  public type: string = 'ring-process';\n\n  /**\n   * 更新数据\n   * @param percent\n   */\n  public changeData(percent: number) {\n    this.chart.emit(\n      VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA,\n      Event.fromData(this.chart, VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, null)\n    );\n    this.updateOption({ percent });\n\n    this.chart.data(getProgressData(percent));\n    // todo 后续让 G2 层在 afterrender 之后，来重绘 annotations\n    statistic({ chart: this.chart, options: this.options }, true);\n\n    this.chart.emit(\n      VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA,\n      Event.fromData(this.chart, VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA, null)\n    );\n  }\n\n  protected getDefaultOptions() {\n    return RingProgress.getDefaultOptions();\n  }\n\n  /**\n   * 获取 环形进度图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<RingProgressOptions> {\n    return adaptor;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}