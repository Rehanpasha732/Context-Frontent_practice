{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { get, keys } from '@antv/util';\nimport { tooltip, interaction as commonInteraction, animation as commonAnimation, theme as commonTheme, limitInPlot as commonLimitInPlot, scale } from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { flow, findViewById, findGeometry, transformLabel, deepAssign } from '../../utils';\nimport { FIRST_AXES_VIEW, SECOND_AXES_VIEW, SERIES_FIELD_KEY } from './constant';\nimport { isHorizontal, transformData } from './utils';\n/**\n * geometry 处理\n * @param params\n */\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var data = options.data,\n      xField = options.xField,\n      yField = options.yField,\n      color = options.color,\n      barStyle = options.barStyle,\n      widthRatio = options.widthRatio,\n      legend = options.legend,\n      layout = options.layout; // 处理数据\n\n  var groupData = transformData(xField, yField, SERIES_FIELD_KEY, data, isHorizontal(layout)); // 在创建子 view 执行后不行，需要在前面处理 legend\n\n  if (legend) {\n    chart.legend(SERIES_FIELD_KEY, legend);\n  } else if (legend === false) {\n    chart.legend(false);\n  } // 创建 view\n\n\n  var firstView;\n  var secondView;\n  var firstViewData = groupData[0],\n      secondViewData = groupData[1]; // 横向\n\n  if (isHorizontal(layout)) {\n    firstView = chart.createView({\n      region: {\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 0.5,\n          y: 1\n        }\n      },\n      id: FIRST_AXES_VIEW\n    });\n    firstView.coordinate().transpose().reflect('x');\n    secondView = chart.createView({\n      region: {\n        start: {\n          x: 0.5,\n          y: 0\n        },\n        end: {\n          x: 1,\n          y: 1\n        }\n      },\n      id: SECOND_AXES_VIEW\n    });\n    secondView.coordinate().transpose(); // @说明: 测试发现，横向因为轴的反转，需要数据也反转，不然会图形渲染是反的(翻转操作进入到 transform 中处理)\n\n    firstView.data(firstViewData);\n    secondView.data(secondViewData);\n  } else {\n    // 纵向\n    firstView = chart.createView({\n      region: {\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 1,\n          y: 0.5\n        }\n      },\n      id: FIRST_AXES_VIEW\n    });\n    secondView = chart.createView({\n      region: {\n        start: {\n          x: 0,\n          y: 0.5\n        },\n        end: {\n          x: 1,\n          y: 1\n        }\n      },\n      id: SECOND_AXES_VIEW\n    });\n    secondView.coordinate().reflect('y');\n    firstView.data(firstViewData);\n    secondView.data(secondViewData);\n  }\n\n  var left = deepAssign({}, params, {\n    chart: firstView,\n    options: {\n      widthRatio: widthRatio,\n      xField: xField,\n      yField: yField[0],\n      seriesField: SERIES_FIELD_KEY,\n      interval: {\n        color: color,\n        style: barStyle\n      }\n    }\n  });\n  interval(left);\n  var right = deepAssign({}, params, {\n    chart: secondView,\n    options: {\n      xField: xField,\n      yField: yField[1],\n      seriesField: SERIES_FIELD_KEY,\n      widthRatio: widthRatio,\n      interval: {\n        color: color,\n        style: barStyle\n      }\n    }\n  });\n  interval(right);\n  return params;\n}\n/**\n * meta 配置\n * - 对称条形图对数据进行了处理，通过 SERIES_FIELD_KEY 来对两条 yField 数据进行分类\n * @param params\n */\n\n\nfunction meta(params) {\n  var _a, _b, _c;\n\n  var options = params.options,\n      chart = params.chart;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField;\n  var firstView = findViewById(chart, FIRST_AXES_VIEW);\n  var secondView = findViewById(chart, SECOND_AXES_VIEW);\n  var aliasMap = {};\n  keys((options === null || options === void 0 ? void 0 : options.meta) || {}).map(function (metaKey) {\n    if (get(options === null || options === void 0 ? void 0 : options.meta, [metaKey, 'alias'])) {\n      aliasMap[metaKey] = options.meta[metaKey].alias;\n    }\n  });\n  chart.scale((_a = {}, _a[SERIES_FIELD_KEY] = {\n    sync: true,\n    formatter: function (v) {\n      return get(aliasMap, v, v);\n    }\n  }, _a));\n  scale((_b = {}, _b[xField] = xAxis, _b[yField[0]] = yAxis[yField[0]], _b))(deepAssign({}, params, {\n    chart: firstView\n  }));\n  scale((_c = {}, _c[xField] = xAxis, _c[yField[1]] = yAxis[yField[1]], _c))(deepAssign({}, params, {\n    chart: secondView\n  }));\n  return params;\n}\n/**\n * axis 配置\n * @param params\n */\n\n\nfunction axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField,\n      layout = options.layout;\n  var firstView = findViewById(chart, FIRST_AXES_VIEW);\n  var secondView = findViewById(chart, SECOND_AXES_VIEW); // 第二个 view axis 始终隐藏; 注意 bottom 的时候，只隐藏 label，其他共用配置\n  // @ts-ignore\n\n  if ((xAxis === null || xAxis === void 0 ? void 0 : xAxis.position) === 'bottom') {\n    // fixme 直接设置 label: null 会导致 tickLine 无法显示\n    secondView.axis(xField, __assign(__assign({}, xAxis), {\n      label: {\n        formatter: function () {\n          return '';\n        }\n      }\n    }));\n  } else {\n    secondView.axis(xField, false);\n  } // 为 false 则是不显示 firstView 轴\n\n\n  if (xAxis === false) {\n    firstView.axis(xField, false);\n  } else {\n    firstView.axis(xField, __assign({\n      // 不同布局 firstView 的坐标轴显示位置\n      position: isHorizontal(layout) ? 'top' : 'bottom'\n    }, xAxis));\n  }\n\n  if (yAxis === false) {\n    firstView.axis(yField[0], false);\n    secondView.axis(yField[1], false);\n  } else {\n    firstView.axis(yField[0], yAxis[yField[0]]);\n    secondView.axis(yField[1], yAxis[yField[1]]);\n  }\n  /**\n   *  这个注入，主要是在syncViewPadding时候拿到相对应的配置：布局和轴的位置\n   *  TODO 之后希望 g2 View 对象可以开放 setter 可以设置一些需要的东西\n   */\n  //@ts-ignore\n\n\n  chart.__axisPosition = {\n    position: firstView.getOptions().axes[xField].position,\n    layout: layout\n  };\n  return params;\n}\n/**\n * interaction 配置\n * @param params\n */\n\n\nexport function interaction(params) {\n  var chart = params.chart;\n  commonInteraction(deepAssign({}, params, {\n    chart: findViewById(chart, FIRST_AXES_VIEW)\n  }));\n  commonInteraction(deepAssign({}, params, {\n    chart: findViewById(chart, SECOND_AXES_VIEW)\n  }));\n  return params;\n}\n/**\n * limitInPlot\n * @param params\n */\n\nexport function limitInPlot(params) {\n  var chart = params.chart,\n      options = params.options;\n  var yField = options.yField,\n      yAxis = options.yAxis;\n  commonLimitInPlot(deepAssign({}, params, {\n    chart: findViewById(chart, FIRST_AXES_VIEW),\n    options: {\n      yAxis: yAxis[yField[0]]\n    }\n  }));\n  commonLimitInPlot(deepAssign({}, params, {\n    chart: findViewById(chart, SECOND_AXES_VIEW),\n    options: {\n      yAxis: yAxis[yField[1]]\n    }\n  }));\n  return params;\n}\n/**\n * theme\n * @param params\n */\n\nexport function theme(params) {\n  var chart = params.chart;\n  commonTheme(deepAssign({}, params, {\n    chart: findViewById(chart, FIRST_AXES_VIEW)\n  }));\n  commonTheme(deepAssign({}, params, {\n    chart: findViewById(chart, SECOND_AXES_VIEW)\n  }));\n  commonTheme(params);\n  return params;\n}\n/**\n * animation\n * @param params\n */\n\nexport function animation(params) {\n  var chart = params.chart;\n  commonAnimation(deepAssign({}, params, {\n    chart: findViewById(chart, FIRST_AXES_VIEW)\n  }));\n  commonAnimation(deepAssign({}, params, {\n    chart: findViewById(chart, SECOND_AXES_VIEW)\n  }));\n  return params;\n}\n/**\n * label 配置 (1. 设置 offset 偏移量默认值 2. leftView 偏移量需要 *= -1)\n * @param params\n */\n\nfunction label(params) {\n  var _this = this;\n\n  var _a, _b;\n\n  var chart = params.chart,\n      options = params.options;\n  var label = options.label,\n      yField = options.yField,\n      layout = options.layout;\n  var firstView = findViewById(chart, FIRST_AXES_VIEW);\n  var secondView = findViewById(chart, SECOND_AXES_VIEW);\n  var leftGeometry = findGeometry(firstView, 'interval');\n  var rightGeometry = findGeometry(secondView, 'interval');\n\n  if (!label) {\n    leftGeometry.label(false);\n    rightGeometry.label(false);\n  } else {\n    var callback = label.callback,\n        cfg_1 = __rest(label, [\"callback\"]);\n    /** ---- 设置默认配置 ---- */\n    // 默认居中\n\n\n    if (!cfg_1.position) {\n      cfg_1.position = 'middle';\n    }\n\n    if (cfg_1.offset === undefined) {\n      cfg_1.offset = 2;\n    }\n    /** ---- leftView label 设置 ---- */\n\n\n    var leftLabelCfg = __assign({}, cfg_1);\n\n    if (isHorizontal(layout)) {\n      // 设置 textAlign 默认值\n      var textAlign = ((_a = leftLabelCfg.style) === null || _a === void 0 ? void 0 : _a.textAlign) || (cfg_1.position === 'middle' ? 'center' : 'left');\n      cfg_1.style = deepAssign({}, cfg_1.style, {\n        textAlign: textAlign\n      });\n      var textAlignMap = {\n        left: 'right',\n        right: 'left',\n        center: 'center'\n      };\n      leftLabelCfg.style = deepAssign({}, leftLabelCfg.style, {\n        textAlign: textAlignMap[textAlign]\n      });\n    } else {\n      var positionMap_1 = {\n        top: 'bottom',\n        bottom: 'top',\n        middle: 'middle'\n      };\n\n      if (typeof cfg_1.position === 'string') {\n        cfg_1.position = positionMap_1[cfg_1.position];\n      } else if (typeof cfg_1.position === 'function') {\n        cfg_1.position = function () {\n          var args = [];\n\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n\n          return positionMap_1[cfg_1.position.apply(_this, args)];\n        };\n      } // 设置 textBaseline 默认值\n\n\n      var textBaseline = ((_b = leftLabelCfg.style) === null || _b === void 0 ? void 0 : _b.textBaseline) || 'bottom';\n      leftLabelCfg.style = deepAssign({}, leftLabelCfg.style, {\n        textBaseline: textBaseline\n      });\n      var textBaselineMap = {\n        top: 'bottom',\n        bottom: 'top',\n        middle: 'middle'\n      };\n      cfg_1.style = deepAssign({}, cfg_1.style, {\n        textBaseline: textBaselineMap[textBaseline]\n      });\n    }\n\n    leftGeometry.label({\n      fields: [yField[0]],\n      callback: callback,\n      cfg: transformLabel(leftLabelCfg)\n    });\n    rightGeometry.label({\n      fields: [yField[1]],\n      callback: callback,\n      cfg: transformLabel(cfg_1)\n    });\n  }\n\n  return params;\n}\n/**\n * 对称条形图适配器\n * @param chart\n * @param options\n */\n\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(geometry, meta, axis, limitInPlot, theme, label, tooltip, interaction, animation)(params);\n}","map":{"version":3,"mappings":"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","names":["get","keys","tooltip","interaction","commonInteraction","animation","commonAnimation","theme","commonTheme","limitInPlot","commonLimitInPlot","scale","interval","flow","findViewById","findGeometry","transformLabel","deepAssign","FIRST_AXES_VIEW","SECOND_AXES_VIEW","SERIES_FIELD_KEY","isHorizontal","transformData","geometry","params","options","xField","yField","color","barStyle","widthRatio","legend","layout","groupData","data","chart","firstView","secondView","secondViewData","createView","region","start","x","y","end","id","coordinate","transpose","reflect","firstViewData","left","seriesField","style","right","meta","yAxis","aliasMap","map","metaKey","alias","_a","sync","formatter","v","_b","xAxis","_c","axis","position","__assign","label","__axisPosition","getOptions","axes","leftGeometry","rightGeometry","cfg_1","offset","undefined","leftLabelCfg","textAlign","textAlignMap","center","positionMap_1","top","bottom","middle","args","apply","_this","textBaseline","textBaselineMap","fields","callback","cfg","adaptor"],"sources":["E:\\office_react\\Context_Practice\\Context-Frontent_practice\\node_modules\\@antv\\g2plot\\src\\plots\\bidirectional-bar\\adaptor.ts"],"sourcesContent":["import { View } from '@antv/g2';\nimport { get, keys } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport {\n  tooltip,\n  interaction as commonInteraction,\n  animation as commonAnimation,\n  theme as commonTheme,\n  limitInPlot as commonLimitInPlot,\n  scale,\n} from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { flow, findViewById, findGeometry, transformLabel, deepAssign } from '../../utils';\nimport { BidirectionalBarOptions } from './types';\nimport { FIRST_AXES_VIEW, SECOND_AXES_VIEW, SERIES_FIELD_KEY } from './constant';\nimport { isHorizontal, transformData } from './utils';\n\n/**\n * geometry 处理\n * @param params\n */\nfunction geometry(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart, options } = params;\n  const { data, xField, yField, color, barStyle, widthRatio, legend, layout } = options;\n\n  // 处理数据\n  const groupData: any[] = transformData(xField, yField, SERIES_FIELD_KEY, data, isHorizontal(layout));\n  // 在创建子 view 执行后不行，需要在前面处理 legend\n  if (legend) {\n    chart.legend(SERIES_FIELD_KEY, legend);\n  } else if (legend === false) {\n    chart.legend(false);\n  }\n  // 创建 view\n  let firstView: View;\n  let secondView: View;\n  const [firstViewData, secondViewData] = groupData;\n\n  // 横向\n  if (isHorizontal(layout)) {\n    firstView = chart.createView({\n      region: {\n        start: { x: 0, y: 0 },\n        end: { x: 0.5, y: 1 },\n      },\n      id: FIRST_AXES_VIEW,\n    });\n\n    firstView.coordinate().transpose().reflect('x');\n\n    secondView = chart.createView({\n      region: {\n        start: { x: 0.5, y: 0 },\n        end: { x: 1, y: 1 },\n      },\n      id: SECOND_AXES_VIEW,\n    });\n    secondView.coordinate().transpose();\n\n    // @说明: 测试发现，横向因为轴的反转，需要数据也反转，不然会图形渲染是反的(翻转操作进入到 transform 中处理)\n    firstView.data(firstViewData);\n    secondView.data(secondViewData);\n  } else {\n    // 纵向\n    firstView = chart.createView({\n      region: {\n        start: { x: 0, y: 0 },\n        end: { x: 1, y: 0.5 },\n      },\n      id: FIRST_AXES_VIEW,\n    });\n    secondView = chart.createView({\n      region: {\n        start: { x: 0, y: 0.5 },\n        end: { x: 1, y: 1 },\n      },\n      id: SECOND_AXES_VIEW,\n    });\n    secondView.coordinate().reflect('y');\n\n    firstView.data(firstViewData);\n    secondView.data(secondViewData);\n  }\n  const left = deepAssign({}, params, {\n    chart: firstView,\n    options: {\n      widthRatio,\n      xField,\n      yField: yField[0],\n      seriesField: SERIES_FIELD_KEY,\n      interval: {\n        color,\n        style: barStyle,\n      },\n    },\n  });\n  interval(left);\n\n  const right = deepAssign({}, params, {\n    chart: secondView,\n    options: {\n      xField,\n      yField: yField[1],\n      seriesField: SERIES_FIELD_KEY,\n      widthRatio,\n      interval: {\n        color,\n        style: barStyle,\n      },\n    },\n  });\n\n  interval(right);\n\n  return params;\n}\n\n/**\n * meta 配置\n * - 对称条形图对数据进行了处理，通过 SERIES_FIELD_KEY 来对两条 yField 数据进行分类\n * @param params\n */\nfunction meta(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { options, chart } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n  const firstView = findViewById(chart, FIRST_AXES_VIEW);\n  const secondView = findViewById(chart, SECOND_AXES_VIEW);\n\n  const aliasMap = {};\n  keys(options?.meta || {}).map((metaKey) => {\n    if (get(options?.meta, [metaKey, 'alias'])) {\n      aliasMap[metaKey] = options.meta[metaKey].alias;\n    }\n  });\n\n  chart.scale({\n    [SERIES_FIELD_KEY]: {\n      sync: true,\n      formatter: (v) => {\n        return get(aliasMap, v, v);\n      },\n    },\n  });\n\n  scale({\n    [xField]: xAxis,\n    [yField[0]]: yAxis[yField[0]],\n  })(deepAssign({}, params, { chart: firstView }));\n\n  scale({\n    [xField]: xAxis,\n    [yField[1]]: yAxis[yField[1]],\n  })(deepAssign({}, params, { chart: secondView }));\n\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField, layout } = options;\n\n  const firstView = findViewById(chart, FIRST_AXES_VIEW);\n  const secondView = findViewById(chart, SECOND_AXES_VIEW);\n  // 第二个 view axis 始终隐藏; 注意 bottom 的时候，只隐藏 label，其他共用配置\n  // @ts-ignore\n  if (xAxis?.position === 'bottom') {\n    // fixme 直接设置 label: null 会导致 tickLine 无法显示\n    secondView.axis(xField, { ...xAxis, label: { formatter: () => '' } });\n  } else {\n    secondView.axis(xField, false);\n  }\n\n  // 为 false 则是不显示 firstView 轴\n  if (xAxis === false) {\n    firstView.axis(xField, false);\n  } else {\n    firstView.axis(xField, {\n      // 不同布局 firstView 的坐标轴显示位置\n      position: isHorizontal(layout) ? 'top' : 'bottom',\n      ...xAxis,\n    });\n  }\n\n  if (yAxis === false) {\n    firstView.axis(yField[0], false);\n    secondView.axis(yField[1], false);\n  } else {\n    firstView.axis(yField[0], yAxis[yField[0]]);\n    secondView.axis(yField[1], yAxis[yField[1]]);\n  }\n  /**\n   *  这个注入，主要是在syncViewPadding时候拿到相对应的配置：布局和轴的位置\n   *  TODO 之后希望 g2 View 对象可以开放 setter 可以设置一些需要的东西\n   */\n\n  //@ts-ignore\n  chart.__axisPosition = {\n    position: firstView.getOptions().axes[xField].position,\n    layout,\n  };\n  return params;\n}\n\n/**\n * interaction 配置\n * @param params\n */\nexport function interaction(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart } = params;\n\n  commonInteraction(deepAssign({}, params, { chart: findViewById(chart, FIRST_AXES_VIEW) }));\n  commonInteraction(deepAssign({}, params, { chart: findViewById(chart, SECOND_AXES_VIEW) }));\n\n  return params;\n}\n\n/**\n * limitInPlot\n * @param params\n */\nexport function limitInPlot(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart, options } = params;\n  const { yField, yAxis } = options;\n\n  commonLimitInPlot(\n    deepAssign({}, params, {\n      chart: findViewById(chart, FIRST_AXES_VIEW),\n      options: {\n        yAxis: yAxis[yField[0]],\n      },\n    })\n  );\n\n  commonLimitInPlot(\n    deepAssign({}, params, {\n      chart: findViewById(chart, SECOND_AXES_VIEW),\n      options: {\n        yAxis: yAxis[yField[1]],\n      },\n    })\n  );\n\n  return params;\n}\n\n/**\n * theme\n * @param params\n */\nexport function theme(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart } = params;\n\n  commonTheme(deepAssign({}, params, { chart: findViewById(chart, FIRST_AXES_VIEW) }));\n  commonTheme(deepAssign({}, params, { chart: findViewById(chart, SECOND_AXES_VIEW) }));\n  commonTheme(params);\n\n  return params;\n}\n\n/**\n * animation\n * @param params\n */\nexport function animation(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart } = params;\n\n  commonAnimation(deepAssign({}, params, { chart: findViewById(chart, FIRST_AXES_VIEW) }));\n  commonAnimation(deepAssign({}, params, { chart: findViewById(chart, SECOND_AXES_VIEW) }));\n\n  return params;\n}\n\n/**\n * label 配置 (1. 设置 offset 偏移量默认值 2. leftView 偏移量需要 *= -1)\n * @param params\n */\nfunction label(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart, options } = params;\n  const { label, yField, layout } = options;\n\n  const firstView = findViewById(chart, FIRST_AXES_VIEW);\n  const secondView = findViewById(chart, SECOND_AXES_VIEW);\n  const leftGeometry = findGeometry(firstView, 'interval');\n  const rightGeometry = findGeometry(secondView, 'interval');\n\n  if (!label) {\n    leftGeometry.label(false);\n    rightGeometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    /** ---- 设置默认配置 ---- */\n    // 默认居中\n    if (!cfg.position) {\n      cfg.position = 'middle';\n    }\n    if (cfg.offset === undefined) {\n      cfg.offset = 2;\n    }\n\n    /** ---- leftView label 设置 ---- */\n    const leftLabelCfg = { ...cfg };\n    if (isHorizontal(layout)) {\n      // 设置 textAlign 默认值\n      const textAlign = leftLabelCfg.style?.textAlign || (cfg.position === 'middle' ? 'center' : 'left');\n      cfg.style = deepAssign({}, cfg.style, { textAlign });\n      const textAlignMap = { left: 'right', right: 'left', center: 'center' };\n      leftLabelCfg.style = deepAssign({}, leftLabelCfg.style, { textAlign: textAlignMap[textAlign] });\n    } else {\n      const positionMap = { top: 'bottom', bottom: 'top', middle: 'middle' };\n      if (typeof cfg.position === 'string') {\n        cfg.position = positionMap[cfg.position];\n      } else if (typeof cfg.position === 'function') {\n        cfg.position = (...args) => positionMap[(cfg.position as Function).apply(this, args)];\n      }\n      // 设置 textBaseline 默认值\n      const textBaseline = leftLabelCfg.style?.textBaseline || 'bottom';\n      leftLabelCfg.style = deepAssign({}, leftLabelCfg.style, { textBaseline });\n      const textBaselineMap = { top: 'bottom', bottom: 'top', middle: 'middle' };\n      cfg.style = deepAssign({}, cfg.style, { textBaseline: textBaselineMap[textBaseline] });\n    }\n\n    leftGeometry.label({\n      fields: [yField[0]],\n      callback,\n      cfg: transformLabel(leftLabelCfg),\n    });\n    rightGeometry.label({\n      fields: [yField[1]],\n      callback,\n      cfg: transformLabel(cfg),\n    });\n  }\n\n  return params;\n}\n\n/**\n * 对称条形图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<BidirectionalBarOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(geometry, meta, axis, limitInPlot, theme, label, tooltip, interaction, animation)(params);\n}\n"]},"metadata":{},"sourceType":"module"}