{"ast":null,"code":"import { __rest } from \"tslib\";\nimport { filter, isObject, isArray } from '@antv/util';\nimport { flow, findGeometry, log, LEVEL, transformLabel, deepAssign } from '../../utils';\nimport { tooltip, interaction, animation, theme, scale, annotation, state, pattern } from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\n/**\n * geometry 配置处理\n * @param params\n */\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var data = options.data,\n      sectorStyle = options.sectorStyle,\n      color = options.color; // 装载数据\n\n  chart.data(data);\n  flow(interval)(deepAssign({}, params, {\n    options: {\n      marginRatio: 1,\n      interval: {\n        style: sectorStyle,\n        color: color\n      }\n    }\n  }));\n  return params;\n}\n/**\n * label 配置\n * @param params\n */\n\n\nfunction label(params) {\n  var chart = params.chart,\n      options = params.options;\n  var label = options.label,\n      xField = options.xField;\n  var geometry = findGeometry(chart, 'interval'); // label 为 false 不显示 label\n\n  if (label === false) {\n    geometry.label(false);\n  } else if (isObject(label)) {\n    var callback = label.callback,\n        fields = label.fields,\n        cfg = __rest(label, [\"callback\", \"fields\"]);\n\n    var offset = cfg.offset;\n    var layout = cfg.layout; // 当 label 在 shape 外部显示时，设置 'limit-in-shape' 会\n    // 造成 label 不显示。\n\n    if (offset === undefined || offset >= 0) {\n      layout = layout ? isArray(layout) ? layout : [layout] : [];\n      cfg.layout = filter(layout, function (v) {\n        return v.type !== 'limit-in-shape';\n      });\n      cfg.layout.length || delete cfg.layout;\n    }\n\n    geometry.label({\n      fields: fields || [xField],\n      callback: callback,\n      cfg: transformLabel(cfg)\n    });\n  } else {\n    log(LEVEL.WARN, label === null, 'the label option must be an Object.');\n    geometry.label({\n      fields: [xField]\n    });\n  }\n\n  return params;\n}\n/**\n * legend 配置\n * @param params\n */\n\n\nexport function legend(params) {\n  var chart = params.chart,\n      options = params.options;\n  var legend = options.legend,\n      seriesField = options.seriesField;\n\n  if (legend === false) {\n    chart.legend(false);\n  } else if (seriesField) {\n    chart.legend(seriesField, legend);\n  }\n\n  return params;\n}\n/**\n * coord 配置\n * @param params\n */\n\nfunction coordinate(params) {\n  var chart = params.chart,\n      options = params.options;\n  var radius = options.radius,\n      innerRadius = options.innerRadius,\n      startAngle = options.startAngle,\n      endAngle = options.endAngle;\n  chart.coordinate({\n    type: 'polar',\n    cfg: {\n      radius: radius,\n      innerRadius: innerRadius,\n      startAngle: startAngle,\n      endAngle: endAngle\n    }\n  });\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nfunction meta(params) {\n  var _a;\n\n  var options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField;\n  return flow(scale((_a = {}, _a[xField] = xAxis, _a[yField] = yAxis, _a)))(params);\n}\n/**\n * axis 配置\n * @param params\n */\n\n\nfunction axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField; // 为 falsy 则是不显示轴\n\n  if (!xAxis) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (!yAxis) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n/**\n * 玫瑰图适配器\n * @param chart\n * @param options\n */\n\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  flow(pattern('sectorStyle'), geometry, meta, label, coordinate, axis, legend, tooltip, interaction, animation, theme, annotation(), state)(params);\n}","map":{"version":3,"mappings":"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","names":["filter","isObject","isArray","flow","findGeometry","log","LEVEL","transformLabel","deepAssign","tooltip","interaction","animation","theme","scale","annotation","state","pattern","interval","geometry","params","options","sectorStyle","color","chart","data","marginRatio","style","label","xField","fields","cfg","layout","offset","undefined","v","type","length","callback","WARN","legend","seriesField","coordinate","innerRadius","startAngle","endAngle","radius","meta","yAxis","yField","_a","xAxis","axis","adaptor"],"sources":["E:\\office_react\\Context_Practice\\Context-Frontent_practice\\node_modules\\@antv\\g2plot\\src\\plots\\rose\\adaptor.ts"],"sourcesContent":["import { filter, isObject, isArray } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport { flow, findGeometry, log, LEVEL, transformLabel, deepAssign } from '../../utils';\nimport { tooltip, interaction, animation, theme, scale, annotation, state, pattern } from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { RoseOptions } from './types';\n\n/**\n * geometry 配置处理\n * @param params\n */\nfunction geometry(params: Params<RoseOptions>): Params<RoseOptions> {\n  const { chart, options } = params;\n  const { data, sectorStyle, color } = options;\n\n  // 装载数据\n  chart.data(data);\n\n  flow(interval)(\n    deepAssign({}, params, {\n      options: {\n        marginRatio: 1,\n        interval: {\n          style: sectorStyle,\n          color,\n        },\n      },\n    })\n  );\n\n  return params;\n}\n\n/**\n * label 配置\n * @param params\n */\nfunction label(params: Params<RoseOptions>): Params<RoseOptions> {\n  const { chart, options } = params;\n  const { label, xField } = options;\n  const geometry = findGeometry(chart, 'interval');\n\n  // label 为 false 不显示 label\n  if (label === false) {\n    geometry.label(false);\n  } else if (isObject(label)) {\n    const { callback, fields, ...cfg } = label;\n    const { offset } = cfg;\n    let layout = cfg.layout;\n\n    // 当 label 在 shape 外部显示时，设置 'limit-in-shape' 会\n    // 造成 label 不显示。\n    if (offset === undefined || offset >= 0) {\n      layout = layout ? (isArray(layout) ? layout : [layout]) : [];\n      cfg.layout = filter(layout, (v) => v.type !== 'limit-in-shape');\n      cfg.layout.length || delete cfg.layout;\n    }\n\n    geometry.label({\n      fields: fields || [xField],\n      callback,\n      cfg: transformLabel(cfg),\n    });\n  } else {\n    log(LEVEL.WARN, label === null, 'the label option must be an Object.');\n    geometry.label({ fields: [xField] });\n  }\n\n  return params;\n}\n\n/**\n * legend 配置\n * @param params\n */\nexport function legend(params: Params<RoseOptions>): Params<RoseOptions> {\n  const { chart, options } = params;\n  const { legend, seriesField } = options;\n\n  if (legend === false) {\n    chart.legend(false);\n  } else if (seriesField) {\n    chart.legend(seriesField, legend);\n  }\n\n  return params;\n}\n\n/**\n * coord 配置\n * @param params\n */\nfunction coordinate(params: Params<RoseOptions>): Params<RoseOptions> {\n  const { chart, options } = params;\n  const { radius, innerRadius, startAngle, endAngle } = options;\n\n  chart.coordinate({\n    type: 'polar',\n    cfg: {\n      radius,\n      innerRadius,\n      startAngle,\n      endAngle,\n    },\n  });\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<RoseOptions>): Params<RoseOptions> {\n  const { options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  return flow(\n    scale({\n      [xField]: xAxis,\n      [yField]: yAxis,\n    })\n  )(params);\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<RoseOptions>): Params<RoseOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  // 为 falsy 则是不显示轴\n  if (!xAxis) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (!yAxis) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n\n/**\n * 玫瑰图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<RoseOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  flow(\n    pattern('sectorStyle'),\n    geometry,\n    meta,\n    label,\n    coordinate,\n    axis,\n    legend,\n    tooltip,\n    interaction,\n    animation,\n    theme,\n    annotation(),\n    state\n  )(params);\n}\n"]},"metadata":{},"sourceType":"module"}