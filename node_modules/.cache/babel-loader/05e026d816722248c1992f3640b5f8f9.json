{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { get } from '@antv/util';\nimport { Plot } from '../../core/plot';\nimport { findViewById } from '../../utils';\nimport { adaptor } from './adaptor';\nimport { transformToViewsData } from './helper';\nimport { EDGES_VIEW_ID, NODES_VIEW_ID } from './constant'; // 桑基图内置交互\n\nimport './interactions';\n/**\n *  桑基图 Sankey\n */\n\nvar Sankey =\n/** @class */\nfunction (_super) {\n  __extends(Sankey, _super);\n\n  function Sankey() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'sankey';\n    return _this;\n  }\n\n  Sankey.getDefaultOptions = function () {\n    return {\n      appendPadding: 8,\n      syncViewPadding: true,\n      nodeStyle: {\n        opacity: 1,\n        fillOpacity: 1,\n        lineWidth: 1\n      },\n      edgeStyle: {\n        opacity: 0.3,\n        lineWidth: 0\n      },\n      edgeState: {\n        active: {\n          style: {\n            opacity: 0.8,\n            lineWidth: 0\n          }\n        }\n      },\n      label: {\n        formatter: function (_a) {\n          var name = _a.name;\n          return name;\n        },\n        callback: function (x) {\n          var isLast = x[1] === 1; // 最后一列靠边的节点\n\n          return {\n            style: {\n              fill: '#545454',\n              textAlign: isLast ? 'end' : 'start'\n            },\n            offsetX: isLast ? -8 : 8\n          };\n        },\n        layout: [{\n          type: 'hide-overlap'\n        }]\n      },\n      tooltip: {\n        showTitle: false,\n        showMarkers: false,\n        shared: false,\n        // 内置：node 不显示 tooltip，edge 显示 tooltip\n        showContent: function (items) {\n          return !get(items, [0, 'data', 'isNode']);\n        },\n        formatter: function (datum) {\n          var source = datum.source,\n              target = datum.target,\n              value = datum.value;\n          return {\n            name: source + ' -> ' + target,\n            value: value\n          };\n        }\n      },\n      nodeWidthRatio: 0.008,\n      nodePaddingRatio: 0.01,\n      animation: {\n        appear: {\n          animation: 'wave-in'\n        },\n        enter: {\n          animation: 'wave-in'\n        }\n      }\n    };\n  };\n  /**\n   * @override\n   * @param data\n   */\n\n\n  Sankey.prototype.changeData = function (data) {\n    this.updateOption({\n      data: data\n    });\n\n    var _a = transformToViewsData(this.options, this.chart.width, this.chart.height),\n        nodes = _a.nodes,\n        edges = _a.edges;\n\n    var nodesView = findViewById(this.chart, NODES_VIEW_ID);\n    var edgesView = findViewById(this.chart, EDGES_VIEW_ID);\n    nodesView.changeData(nodes);\n    edgesView.changeData(edges);\n  };\n  /**\n   * 获取适配器\n   */\n\n\n  Sankey.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  /**\n   * 获取 条形图 默认配置\n   */\n\n\n  Sankey.prototype.getDefaultOptions = function () {\n    return Sankey.getDefaultOptions();\n  };\n\n  return Sankey;\n}(Plot);\n\nexport { Sankey };","map":{"version":3,"mappings":";AAAA,SAASA,GAAT,QAAoB,YAApB;AACA,SAASC,IAAT,QAAqB,iBAArB;AAGA,SAASC,YAAT,QAA6B,aAA7B;AAEA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,oBAAT,QAAqC,UAArC;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,YAA7C,C,CACA;;AACA,OAAO,gBAAP;AAIA;;;;AAGA;AAAA;AAAA;EAA4BC;;EAA5B;IAAA;IACE;;;IACOC,aAAe,QAAf;;EAmGR;;EAjGQC,2BAAP;IACE,OAAO;MACLC,aAAa,EAAE,CADV;MAELC,eAAe,EAAE,IAFZ;MAGLC,SAAS,EAAE;QACTC,OAAO,EAAE,CADA;QAETC,WAAW,EAAE,CAFJ;QAGTC,SAAS,EAAE;MAHF,CAHN;MAQLC,SAAS,EAAE;QACTH,OAAO,EAAE,GADA;QAETE,SAAS,EAAE;MAFF,CARN;MAYLE,SAAS,EAAE;QACTC,MAAM,EAAE;UACNC,KAAK,EAAE;YACLN,OAAO,EAAE,GADJ;YAELE,SAAS,EAAE;UAFN;QADD;MADC,CAZN;MAoBLK,KAAK,EAAE;QACLC,SAAS,EAAE,UAACC,EAAD,EAAS;cAANC,IAAI;UAAO;QAAI,CADxB;QAELC,QAAQ,EAAE,UAACC,CAAD,EAAY;UACpB,IAAMC,MAAM,GAAGD,CAAC,CAAC,CAAD,CAAD,KAAS,CAAxB,CADoB,CACO;;UAC3B,OAAO;YACLN,KAAK,EAAE;cACLQ,IAAI,EAAE,SADD;cAELC,SAAS,EAAEF,MAAM,GAAG,KAAH,GAAW;YAFvB,CADF;YAKLG,OAAO,EAAEH,MAAM,GAAG,CAAC,CAAJ,GAAQ;UALlB,CAAP;QAOD,CAXI;QAYLI,MAAM,EAAE,CACN;UACEC,IAAI,EAAE;QADR,CADM;MAZH,CApBF;MAsCLC,OAAO,EAAE;QACPC,SAAS,EAAE,KADJ;QAEPC,WAAW,EAAE,KAFN;QAGPC,MAAM,EAAE,KAHD;QAIP;QACAC,WAAW,EAAE,UAACC,KAAD,EAAM;UACjB,OAAO,CAACrC,GAAG,CAACqC,KAAD,EAAQ,CAAC,CAAD,EAAI,MAAJ,EAAY,QAAZ,CAAR,CAAX;QACD,CAPM;QAQPhB,SAAS,EAAE,UAACiB,KAAD,EAAa;UACd,UAAM,GAAoBA,KAAK,OAA/B;UAAA,IAAQC,MAAM,GAAYD,KAAK,OAA/B;UAAA,IAAgBE,KAAK,GAAKF,KAAK,MAA/B;UACR,OAAO;YACLf,IAAI,EAAEkB,MAAM,GAAG,MAAT,GAAkBF,MADnB;YAELC,KAAK;UAFA,CAAP;QAID;MAdM,CAtCJ;MAsDLE,cAAc,EAAE,KAtDX;MAuDLC,gBAAgB,EAAE,IAvDb;MAwDLC,SAAS,EAAE;QACTC,MAAM,EAAE;UACND,SAAS,EAAE;QADL,CADC;QAITE,KAAK,EAAE;UACLF,SAAS,EAAE;QADN;MAJE;IAxDN,CAAP;EAiED,CAlEM;EAoEP;;;;;;EAIOnC,8BAAP,UAAkBsC,IAAlB,EAA4B;IAC1B,KAAKC,YAAL,CAAkB;MAAED,IAAI;IAAN,CAAlB;;IAEM,SAAmB3C,oBAAoB,CAAC,KAAK6C,OAAN,EAAe,KAAKC,KAAL,CAAWC,KAA1B,EAAiC,KAAKD,KAAL,CAAWE,MAA5C,CAAvC;IAAA,IAAEC,KAAK,WAAP;IAAA,IAASC,KAAK,WAAd;;IAEN,IAAMC,SAAS,GAAGrD,YAAY,CAAC,KAAKgD,KAAN,EAAa5C,aAAb,CAA9B;IACA,IAAMkD,SAAS,GAAGtD,YAAY,CAAC,KAAKgD,KAAN,EAAa7C,aAAb,CAA9B;IAEAkD,SAAS,CAACE,UAAV,CAAqBJ,KAArB;IACAG,SAAS,CAACC,UAAV,CAAqBH,KAArB;EACD,CAVM;EAYP;;;;;EAGU7C,oCAAV;IACE,OAAON,OAAP;EACD,CAFS;EAIV;;;;;EAGUM,qCAAV;IACE,OAAOA,MAAM,CAACiD,iBAAP,EAAP;EACD,CAFS;;EAGZ;AAAC,CArGD,CAA4BzD,IAA5B","names":["get","Plot","findViewById","adaptor","transformToViewsData","EDGES_VIEW_ID","NODES_VIEW_ID","__extends","_this","Sankey","appendPadding","syncViewPadding","nodeStyle","opacity","fillOpacity","lineWidth","edgeStyle","edgeState","active","style","label","formatter","_a","name","callback","x","isLast","fill","textAlign","offsetX","layout","type","tooltip","showTitle","showMarkers","shared","showContent","items","datum","target","value","source","nodeWidthRatio","nodePaddingRatio","animation","appear","enter","data","updateOption","options","chart","width","height","nodes","edges","nodesView","edgesView","changeData","getDefaultOptions"],"sources":["E:\\office_react\\Context_Practice\\Context-Frontent_practice\\node_modules\\@antv\\g2plot\\src\\plots\\sankey\\index.ts"],"sourcesContent":["import { get } from '@antv/util';\nimport { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { Data, Datum } from '../../types';\nimport { findViewById } from '../../utils';\nimport { SankeyOptions } from './types';\nimport { adaptor } from './adaptor';\nimport { transformToViewsData } from './helper';\nimport { EDGES_VIEW_ID, NODES_VIEW_ID } from './constant';\n// 桑基图内置交互\nimport './interactions';\n\nexport type { SankeyOptions };\n\n/**\n *  桑基图 Sankey\n */\nexport class Sankey extends Plot<SankeyOptions> {\n  /** 图表类型 */\n  public type: string = 'sankey';\n\n  static getDefaultOptions(): Partial<SankeyOptions> {\n    return {\n      appendPadding: 8,\n      syncViewPadding: true,\n      nodeStyle: {\n        opacity: 1,\n        fillOpacity: 1,\n        lineWidth: 1,\n      },\n      edgeStyle: {\n        opacity: 0.3,\n        lineWidth: 0,\n      },\n      edgeState: {\n        active: {\n          style: {\n            opacity: 0.8,\n            lineWidth: 0,\n          },\n        },\n      },\n      label: {\n        formatter: ({ name }) => name,\n        callback: (x: number[]) => {\n          const isLast = x[1] === 1; // 最后一列靠边的节点\n          return {\n            style: {\n              fill: '#545454',\n              textAlign: isLast ? 'end' : 'start',\n            },\n            offsetX: isLast ? -8 : 8,\n          };\n        },\n        layout: [\n          {\n            type: 'hide-overlap',\n          },\n        ],\n      },\n      tooltip: {\n        showTitle: false,\n        showMarkers: false,\n        shared: false,\n        // 内置：node 不显示 tooltip，edge 显示 tooltip\n        showContent: (items) => {\n          return !get(items, [0, 'data', 'isNode']);\n        },\n        formatter: (datum: Datum) => {\n          const { source, target, value } = datum;\n          return {\n            name: source + ' -> ' + target,\n            value,\n          };\n        },\n      },\n      nodeWidthRatio: 0.008,\n      nodePaddingRatio: 0.01,\n      animation: {\n        appear: {\n          animation: 'wave-in',\n        },\n        enter: {\n          animation: 'wave-in',\n        },\n      },\n    };\n  }\n\n  /**\n   * @override\n   * @param data\n   */\n  public changeData(data: Data) {\n    this.updateOption({ data });\n\n    const { nodes, edges } = transformToViewsData(this.options, this.chart.width, this.chart.height);\n\n    const nodesView = findViewById(this.chart, NODES_VIEW_ID);\n    const edgesView = findViewById(this.chart, EDGES_VIEW_ID);\n\n    nodesView.changeData(nodes);\n    edgesView.changeData(edges);\n  }\n\n  /**\n   * 获取适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<SankeyOptions> {\n    return adaptor;\n  }\n\n  /**\n   * 获取 条形图 默认配置\n   */\n  protected getDefaultOptions() {\n    return Sankey.getDefaultOptions();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}