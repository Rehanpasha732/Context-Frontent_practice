{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { deepAssign } from '../../utils';\nimport { geometry } from './base';\n/**\n * schema 的配置处理\n * @param params\n */\n\nexport function schema(params) {\n  var options = params.options;\n  var schema = options.schema,\n      xField = options.xField,\n      yField = options.yField,\n      seriesField = options.seriesField,\n      tooltip = options.tooltip,\n      useDeferredLabel = options.useDeferredLabel;\n\n  var _a = getTooltipMapping(tooltip, [xField, yField, seriesField]),\n      fields = _a.fields,\n      formatter = _a.formatter;\n\n  return schema ? geometry(deepAssign({}, params, {\n    options: {\n      type: 'schema',\n      colorField: seriesField,\n      tooltipFields: fields,\n      mapping: __assign({\n        tooltip: formatter\n      }, schema),\n      args: {\n        useDeferredLabel: useDeferredLabel\n      }\n    }\n  })) : params;\n}","map":{"version":3,"mappings":";AACA,SAASA,iBAAT,QAAkC,qBAAlC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,QAAT,QAA0D,QAA1D;AAaA;;;;;AAIA,OAAM,SAAUC,MAAV,CAAkDC,MAAlD,EAAmE;EAC/D,WAAO,GAAKA,MAAM,QAAlB;EACA,UAAM,GAA6DC,OAAO,OAA1E;EAAA,IAAQC,MAAM,GAAqDD,OAAO,OAA1E;EAAA,IAAgBE,MAAM,GAA6CF,OAAO,OAA1E;EAAA,IAAwBG,WAAW,GAAgCH,OAAO,YAA1E;EAAA,IAAqCI,OAAO,GAAuBJ,OAAO,QAA1E;EAAA,IAA8CK,gBAAgB,GAAKL,OAAO,iBAA1E;;EAEF,SAAwBL,iBAAiB,CAACS,OAAD,EAAU,CAACH,MAAD,EAASC,MAAT,EAAiBC,WAAjB,CAAV,CAAzC;EAAA,IAAEG,MAAM,YAAR;EAAA,IAAUC,SAAS,eAAnB;;EAEN,OAAOT,MAAM,GACTD,QAAQ,CACND,UAAU,CAAC,EAAD,EAAKG,MAAL,EAAa;IACrBC,OAAO,EAAE;MACPQ,IAAI,EAAE,QADC;MAEPC,UAAU,EAAEN,WAFL;MAGPO,aAAa,EAAEJ,MAHR;MAIPK,OAAO;QACLP,OAAO,EAAEG;MADJ,GAEFT,MAFE,CAJA;MAQPc,IAAI,EAAE;QAAEP,gBAAgB;MAAlB;IARC;EADY,CAAb,CADJ,CADC,GAeTN,MAfJ;AAgBD","names":["getTooltipMapping","deepAssign","geometry","schema","params","options","xField","yField","seriesField","tooltip","useDeferredLabel","fields","formatter","type","colorField","tooltipFields","mapping","args"],"sources":["E:\\office_react\\Context_Practice\\Context-Frontent_practice\\node_modules\\@antv\\g2plot\\src\\adaptor\\geometries\\schema.ts"],"sourcesContent":["import { Params } from '../../core/adaptor';\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { deepAssign } from '../../utils';\nimport { geometry, MappingOptions, GeometryOptions } from './base';\n\nexport interface SchemaGeometryOptions extends GeometryOptions {\n  /** x 轴字段 */\n  readonly xField?: string;\n  /** y 轴字段 */\n  readonly yField?: string;\n  /** 分组字段 */\n  readonly seriesField?: string;\n  /** point 图形映射规则 */\n  readonly schema?: MappingOptions;\n}\n\n/**\n * schema 的配置处理\n * @param params\n */\nexport function schema<O extends SchemaGeometryOptions>(params: Params<O>): Params<O> {\n  const { options } = params;\n  const { schema, xField, yField, seriesField, tooltip, useDeferredLabel } = options;\n\n  const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField, seriesField]);\n\n  return schema\n    ? geometry(\n        deepAssign({}, params, {\n          options: {\n            type: 'schema',\n            colorField: seriesField,\n            tooltipFields: fields,\n            mapping: {\n              tooltip: formatter,\n              ...schema,\n            },\n            args: { useDeferredLabel },\n          },\n        })\n      )\n    : params;\n}\n"]},"metadata":{},"sourceType":"module"}