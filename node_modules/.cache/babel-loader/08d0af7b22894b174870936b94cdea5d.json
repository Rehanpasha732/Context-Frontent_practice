{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { each, get, isNumber, isFunction, isString } from '@antv/util';\nimport { pick, kebabCase } from '.';\n/**\n * @desc 生成 html-statistic 的 style 字符串 (兼容 canvas 的 shapeStyle 到 css样式上)\n *\n * @param width\n * @param style\n */\n\nexport function adapteStyle(style) {\n  var styleObject = {\n    overflow: 'hidden',\n    'white-space': 'nowrap',\n    'text-overflow': 'ellipsis',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  };\n  var shapeStyleKeys = ['stroke', 'lineWidth', 'shadowColor', 'strokeOpacity', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'fill']; // 兼容 shapeStyle 设置 · start\n\n  if (get(style, 'fill')) {\n    styleObject['color'] = style['fill'];\n  }\n\n  var _a = pick(style, shapeStyleKeys),\n      shadowColor = _a.shadowColor,\n      _b = _a.shadowBlur,\n      shadowBlur = _b === void 0 ? 0 : _b,\n      _c = _a.shadowOffsetX,\n      shadowOffsetX = _c === void 0 ? 0 : _c,\n      _d = _a.shadowOffsetY,\n      shadowOffsetY = _d === void 0 ? 0 : _d;\n\n  styleObject['text-shadow'] = \"\" + [shadowColor, shadowOffsetX + \"px\", shadowOffsetY + \"px\", shadowBlur + \"px\"].join(' ');\n\n  var _e = pick(style, shapeStyleKeys),\n      stroke = _e.stroke,\n      _f = _e.lineWidth,\n      lineWidth = _f === void 0 ? 0 : _f;\n\n  styleObject['-webkit-text-stroke'] = \"\" + [lineWidth + \"px\", stroke].join(' '); // 兼容 shapeStyle 设置 · end\n\n  each(style, function (v, k) {\n    //  兼容 shapeStyle 的 fontSize 没有单位\n    if (['fontSize'].includes(k) && isNumber(v)) {\n      styleObject[kebabCase(k)] = v + \"px\";\n    } else if (k && !shapeStyleKeys.includes(k)) {\n      styleObject[kebabCase(k)] = \"\" + v;\n    }\n  });\n  return styleObject;\n}\n/**\n * @desc 设置 html-statistic 容器的默认样式\n *\n * - 默认事件穿透\n */\n\nexport function setStatisticContainerStyle(container, style) {\n  container.style['pointer-events'] = 'none';\n  each(style, function (v, k) {\n    if (k && v) {\n      container.style[k] = v;\n    }\n  });\n}\n/**\n * 渲染环图 html-annotation（默认 position 居中 [50%, 50%]）\n * @param chart\n * @param options\n * @param meta 字段元信息\n * @param {optional} datum 当前的元数据\n */\n\nexport var renderStatistic = function (chart, options, datum) {\n  var statistic = options.statistic,\n      plotType = options.plotType;\n  var titleOpt = statistic.title,\n      contentOpt = statistic.content;\n  [titleOpt, contentOpt].forEach(function (option, idx) {\n    if (!option) {\n      return;\n    }\n\n    var transform = '';\n\n    if (idx === 0) {\n      transform = contentOpt ? 'translate(-50%, -100%)' : 'translate(-50%, -50%)';\n    } else {\n      transform = titleOpt ? 'translate(-50%, 0)' : 'translate(-50%, -50%)';\n    }\n\n    var style = isFunction(option.style) ? option.style(datum) : option.style;\n    chart.annotation().html(__assign({\n      position: ['50%', '50%'],\n      html: function (container, view) {\n        var coordinate = view.getCoordinate();\n        var containerW = 0;\n\n        if (plotType === 'pie' || plotType === 'ring-progress') {\n          containerW = coordinate.getRadius() * coordinate.innerRadius * 2;\n        } else if (plotType === 'liquid') {\n          var liquidShape = get(view.geometries, [0, 'elements', 0, 'shape']);\n\n          if (liquidShape) {\n            // 获取到水波图边框大小\n            var path = liquidShape.find(function (t) {\n              return t.get('name') === 'wrap';\n            });\n            var width = path.getCanvasBBox().width;\n            containerW = width;\n          }\n        } else if (!containerW) {\n          // 保底方案\n          containerW = coordinate.getWidth();\n        }\n\n        setStatisticContainerStyle(container, __assign({\n          width: containerW + \"px\",\n          transform: transform\n        }, adapteStyle(style)));\n        var filteredData = view.getData();\n\n        if (option.customHtml) {\n          return option.customHtml(container, view, datum, filteredData);\n        }\n\n        var text = option.content;\n\n        if (option.formatter) {\n          text = option.formatter(datum, filteredData);\n        } // todo G2 层修复可以返回空字符串 & G2 层修复允许返回非字符串的内容，比如数值 number\n\n\n        return text ? isString(text) ? text : \"\" + text : '<div></div>';\n      },\n      // @ts-ignore\n      key: (idx === 0 ? 'top' : 'bottom') + \"-statistic\"\n    }, pick(option, ['offsetX', 'offsetY', 'rotate', 'style', 'formatter'])\n    /** 透传配置 */\n    ));\n  });\n};\n/**\n * 渲染 html-annotation for gauge (等不规则 plot), 默认 position 居中居底 [50%, 100%]）\n * @param chart\n * @param options\n * @param meta 字段元信息\n * @param {optional} datum 当前的元数据\n */\n\nexport var renderGaugeStatistic = function (chart, options, datum) {\n  var statistic = options.statistic;\n  var titleOpt = statistic.title,\n      contentOpt = statistic.content;\n  [titleOpt, contentOpt].forEach(function (option) {\n    if (!option) {\n      return;\n    }\n\n    var style = isFunction(option.style) ? option.style(datum) : option.style;\n    chart.annotation().html(__assign({\n      position: ['50%', '100%'],\n      html: function (container, view) {\n        var coordinate = view.getCoordinate(); // 弧形的坐标\n\n        var polarCoord = view.views[0].getCoordinate();\n        var polarCenter = polarCoord.getCenter();\n        var polarRadius = polarCoord.getRadius();\n        var polarMaxY = Math.max(Math.sin(polarCoord.startAngle), Math.sin(polarCoord.endAngle)) * polarRadius;\n        var offsetY = polarCenter.y + polarMaxY - coordinate.y.start - parseFloat(get(style, 'fontSize', 0));\n        var containerWidth = coordinate.getRadius() * coordinate.innerRadius * 2;\n        setStatisticContainerStyle(container, __assign({\n          width: containerWidth + \"px\",\n          transform: \"translate(-50%, \" + offsetY + \"px)\"\n        }, adapteStyle(style)));\n        var filteredData = view.getData();\n\n        if (option.customHtml) {\n          return option.customHtml(container, view, datum, filteredData);\n        }\n\n        var text = option.content;\n\n        if (option.formatter) {\n          text = option.formatter(datum, filteredData);\n        } // todo G2 层修复可以返回空字符串 & G2 层修复允许返回非字符串的内容，比如数值 number\n\n\n        return text ? isString(text) ? text : \"\" + text : '<div></div>';\n      }\n    }, pick(option, ['offsetX', 'offsetY', 'rotate', 'style', 'formatter'])\n    /** 透传配置 */\n    ));\n  });\n};","map":{"version":3,"mappings":"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","names":["each","get","isNumber","isFunction","isString","pick","kebabCase","adapteStyle","style","styleObject","overflow","display","justifyContent","alignItems","shapeStyleKeys","shadowColor","_b","shadowBlur","_c","shadowOffsetX","_d","shadowOffsetY","join","stroke","_f","lineWidth","v","k","includes","setStatisticContainerStyle","container","renderStatistic","chart","options","datum","plotType","titleOpt","statistic","contentOpt","forEach","option","idx","transform","annotation","html","__assign","position","view","coordinate","getCoordinate","containerW","getRadius","innerRadius","liquidShape","geometries","path","find","t","getCanvasBBox","width","getWidth","filteredData","getData","customHtml","text","content","formatter","key","renderGaugeStatistic","polarCoord","views","polarCenter","getCenter","polarRadius","polarMaxY","Math","max","sin","startAngle","endAngle","offsetY","y","start","parseFloat","containerWidth"],"sources":["E:\\office_react\\Context_Practice\\Context-Frontent_practice\\node_modules\\@antv\\g2plot\\src\\utils\\statistic.ts"],"sourcesContent":["import { View, IGroup } from '@antv/g2';\nimport { each, get, isNumber, isFunction, isString } from '@antv/util';\nimport { Datum, ShapeStyle, Statistic, StatisticText } from '../types';\nimport { pick, kebabCase } from '.';\n\n/**\n * @desc 生成 html-statistic 的 style 字符串 (兼容 canvas 的 shapeStyle 到 css样式上)\n *\n * @param width\n * @param style\n */\nexport function adapteStyle(style?: StatisticText['style']): object {\n  const styleObject = {\n    overflow: 'hidden',\n    'white-space': 'nowrap',\n    'text-overflow': 'ellipsis',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  };\n\n  const shapeStyleKeys = [\n    'stroke',\n    'lineWidth',\n    'shadowColor',\n    'strokeOpacity',\n    'shadowBlur',\n    'shadowOffsetX',\n    'shadowOffsetY',\n    'fill',\n  ];\n\n  // 兼容 shapeStyle 设置 · start\n  if (get(style, 'fill')) {\n    styleObject['color'] = style['fill'];\n  }\n  const {\n    shadowColor,\n    shadowBlur = 0,\n    shadowOffsetX = 0,\n    shadowOffsetY = 0,\n  } = pick(style, shapeStyleKeys) as ShapeStyle;\n  styleObject['text-shadow'] = `${[shadowColor, `${shadowOffsetX}px`, `${shadowOffsetY}px`, `${shadowBlur}px`].join(\n    ' '\n  )}`;\n\n  const { stroke, lineWidth = 0 } = pick(style, shapeStyleKeys) as ShapeStyle;\n  styleObject['-webkit-text-stroke'] = `${[`${lineWidth}px`, stroke].join(' ')}`;\n  // 兼容 shapeStyle 设置 · end\n\n  each(style, (v, k) => {\n    //  兼容 shapeStyle 的 fontSize 没有单位\n    if (['fontSize'].includes(k) && isNumber(v)) {\n      styleObject[kebabCase(k)] = `${v}px`;\n    } else if (k && !shapeStyleKeys.includes(k)) {\n      styleObject[kebabCase(k)] = `${v}`;\n    }\n  });\n\n  return styleObject;\n}\n\n/**\n * @desc 设置 html-statistic 容器的默认样式\n *\n * - 默认事件穿透\n */\nexport function setStatisticContainerStyle(container: HTMLElement, style: Partial<CSSStyleDeclaration>) {\n  container.style['pointer-events'] = 'none';\n  each(style, (v, k) => {\n    if (k && v) {\n      container.style[k] = v;\n    }\n  });\n}\n\n/**\n * 渲染环图 html-annotation（默认 position 居中 [50%, 50%]）\n * @param chart\n * @param options\n * @param meta 字段元信息\n * @param {optional} datum 当前的元数据\n */\nexport const renderStatistic = (chart: View, options: { statistic: Statistic; plotType: string }, datum?: Datum) => {\n  const { statistic, plotType } = options;\n  const { title: titleOpt, content: contentOpt } = statistic;\n\n  [titleOpt, contentOpt].forEach((option, idx) => {\n    if (!option) {\n      return;\n    }\n    let transform = '';\n    if (idx === 0) {\n      transform = contentOpt ? 'translate(-50%, -100%)' : 'translate(-50%, -50%)';\n    } else {\n      transform = titleOpt ? 'translate(-50%, 0)' : 'translate(-50%, -50%)';\n    }\n    const style = isFunction(option.style) ? option.style(datum) : option.style;\n\n    chart.annotation().html({\n      position: ['50%', '50%'],\n      html: (container, view) => {\n        const coordinate = view.getCoordinate();\n        let containerW = 0;\n        if (plotType === 'pie' || plotType === 'ring-progress') {\n          containerW = coordinate.getRadius() * coordinate.innerRadius * 2;\n        } else if (plotType === 'liquid') {\n          const liquidShape = get(view.geometries, [0, 'elements', 0, 'shape']);\n          if (liquidShape) {\n            // 获取到水波图边框大小\n            const path = (liquidShape as IGroup).find((t) => t.get('name') === 'wrap');\n            const { width } = path.getCanvasBBox();\n            containerW = width;\n          }\n        } else if (!containerW) {\n          // 保底方案\n          containerW = coordinate.getWidth();\n        }\n        setStatisticContainerStyle(container, {\n          width: `${containerW}px`,\n          transform,\n          // user's style setting has high priority\n          ...adapteStyle(style),\n        });\n\n        const filteredData = view.getData();\n        if (option.customHtml) {\n          return option.customHtml(container, view, datum, filteredData);\n        }\n\n        let text = option.content;\n        if (option.formatter) {\n          text = option.formatter(datum, filteredData);\n        }\n        // todo G2 层修复可以返回空字符串 & G2 层修复允许返回非字符串的内容，比如数值 number\n        return text ? (isString(text) ? text : `${text}`) : '<div></div>';\n      },\n      // @ts-ignore\n      key: `${idx === 0 ? 'top' : 'bottom'}-statistic`,\n      ...pick(option, ['offsetX', 'offsetY', 'rotate', 'style', 'formatter']) /** 透传配置 */,\n    });\n  });\n};\n\n/**\n * 渲染 html-annotation for gauge (等不规则 plot), 默认 position 居中居底 [50%, 100%]）\n * @param chart\n * @param options\n * @param meta 字段元信息\n * @param {optional} datum 当前的元数据\n */\nexport const renderGaugeStatistic = (chart: View, options: { statistic: Statistic }, datum?: Datum) => {\n  const { statistic } = options;\n  const { title: titleOpt, content: contentOpt } = statistic;\n\n  [titleOpt, contentOpt].forEach((option) => {\n    if (!option) {\n      return;\n    }\n    const style = isFunction(option.style) ? option.style(datum) : option.style;\n    chart.annotation().html({\n      position: ['50%', '100%'],\n      html: (container, view) => {\n        const coordinate = view.getCoordinate();\n        // 弧形的坐标\n        const polarCoord = view.views[0].getCoordinate();\n        const polarCenter = polarCoord.getCenter();\n        const polarRadius = polarCoord.getRadius();\n        const polarMaxY = Math.max(Math.sin(polarCoord.startAngle), Math.sin(polarCoord.endAngle)) * polarRadius;\n        const offsetY = polarCenter.y + polarMaxY - coordinate.y.start - parseFloat(get(style, 'fontSize', 0));\n\n        const containerWidth = coordinate.getRadius() * coordinate.innerRadius * 2;\n        setStatisticContainerStyle(container, {\n          width: `${containerWidth}px`,\n          transform: `translate(-50%, ${offsetY}px)`,\n          // user's style setting has high priority\n          ...adapteStyle(style),\n        });\n\n        const filteredData = view.getData();\n        if (option.customHtml) {\n          return option.customHtml(container, view, datum, filteredData);\n        }\n\n        let text = option.content;\n        if (option.formatter) {\n          text = option.formatter(datum, filteredData);\n        }\n\n        // todo G2 层修复可以返回空字符串 & G2 层修复允许返回非字符串的内容，比如数值 number\n        return text ? (isString(text) ? text : `${text}`) : '<div></div>';\n      },\n      ...pick(option, ['offsetX', 'offsetY', 'rotate', 'style', 'formatter']) /** 透传配置 */,\n    });\n  });\n};\n"]},"metadata":{},"sourceType":"module"}