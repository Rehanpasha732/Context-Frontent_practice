{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { tooltip } from '../../adaptor/common';\nimport { deepAssign, flow } from '../../utils';\nimport { adaptor as columnAdaptor } from '../column/adaptor';\nexport { meta } from '../column/adaptor';\n/**\n * 处理默认配置项\n * 1. switch xField、 yField\n * 2. switch xAxis、 yAxis and adjust axis.position configuration\n */\n\nfunction defaultOptions(params) {\n  var options = params.options;\n  var xField = options.xField,\n      yField = options.yField,\n      xAxis = options.xAxis,\n      yAxis = options.yAxis;\n  var position = {\n    left: 'bottom',\n    right: 'top',\n    top: 'left',\n    bottom: 'right'\n  };\n  var verticalAxis = yAxis !== false ? __assign({\n    position: position[(yAxis === null || yAxis === void 0 ? void 0 : yAxis.position) || 'left']\n  }, yAxis) : false;\n  var horizontalAxis = xAxis !== false ? __assign({\n    position: position[(xAxis === null || xAxis === void 0 ? void 0 : xAxis.position) || 'bottom']\n  }, xAxis) : false;\n  return __assign(__assign({}, params), {\n    options: __assign(__assign({}, options), {\n      xField: yField,\n      yField: xField,\n      // 条形图 xAxis，yAxis 不可以做 deepAssign\n      xAxis: verticalAxis,\n      yAxis: horizontalAxis\n    })\n  });\n}\n/**\n * label 适配器\n * @param params\n */\n\n\nfunction label(params) {\n  var options = params.options;\n  var label = options.label; // label of bar charts default position is left, if plot has label\n\n  if (label && !label.position) {\n    label.position = 'left'; // 配置默认的 label layout： 如果用户没有指定 layout 和 position， 则自动配置 layout\n\n    if (!label.layout) {\n      label.layout = [{\n        type: 'interval-adjust-position'\n      }, {\n        type: 'interval-hide-overlap'\n      }, {\n        type: 'adjust-color'\n      }, {\n        type: 'limit-in-plot',\n        cfg: {\n          action: 'hide'\n        }\n      }];\n    }\n  }\n\n  return deepAssign({}, params, {\n    options: {\n      label: label\n    }\n  });\n}\n/**\n * legend 适配器\n * @param params\n */\n\n\nfunction legend(params) {\n  var options = params.options; // 默认 legend 位置\n\n  var seriesField = options.seriesField,\n      isStack = options.isStack;\n  var legend = options.legend;\n\n  if (seriesField) {\n    if (legend !== false) {\n      legend = __assign({\n        position: isStack ? 'top-left' : 'right-top'\n      }, legend || {});\n    }\n  } else {\n    legend = false;\n  }\n\n  return deepAssign({}, params, {\n    options: {\n      legend: legend\n    }\n  });\n}\n/**\n * coordinate 适配器\n * @param params\n */\n\n\nfunction coordinate(params) {\n  // transpose column to bar 对角变换 & y 方向镜像变换\n  var options = params.options;\n  var coordinateOptions = [{\n    type: 'transpose'\n  }, {\n    type: 'reflectY'\n  }].concat(options.coordinate || []);\n  return deepAssign({}, params, {\n    options: {\n      coordinate: coordinateOptions\n    }\n  });\n}\n/**\n * 柱形图适配器\n * @param params\n */\n\n\nexport function geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var barStyle = options.barStyle,\n      barWidthRatio = options.barWidthRatio,\n      minBarWidth = options.minBarWidth,\n      maxBarWidth = options.maxBarWidth,\n      barBackground = options.barBackground;\n  return columnAdaptor({\n    chart: chart,\n    options: __assign(__assign({}, options), {\n      // rename attrs as column\n      columnStyle: barStyle,\n      columnWidthRatio: barWidthRatio,\n      minColumnWidth: minBarWidth,\n      maxColumnWidth: maxBarWidth,\n      columnBackground: barBackground\n    })\n  }, true);\n}\n/**\n * @param chart\n * @param options\n */\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(defaultOptions, label, legend, tooltip, coordinate, geometry)(params);\n}","map":{"version":3,"mappings":";AACA,SAASA,OAAT,QAAwB,sBAAxB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,aAAjC;AAEA,SAASC,OAAO,IAAIC,aAApB,QAAyC,mBAAzC;AACA,SAASC,IAAT,QAAqB,mBAArB;AAGA;;;;;;AAKA,SAASC,cAAT,CAAwBC,MAAxB,EAAkD;EACxC,WAAO,GAAKA,MAAM,QAAlB;EACA,UAAM,GAA2BC,OAAO,OAAxC;EAAA,IAAQC,MAAM,GAAmBD,OAAO,OAAxC;EAAA,IAAgBE,KAAK,GAAYF,OAAO,MAAxC;EAAA,IAAuBG,KAAK,GAAKH,OAAO,MAAxC;EAER,IAAMI,QAAQ,GAAG;IACfC,IAAI,EAAE,QADS;IAEfC,KAAK,EAAE,KAFQ;IAGfC,GAAG,EAAE,MAHU;IAIfC,MAAM,EAAE;EAJO,CAAjB;EAOA,IAAMC,YAAY,GAChBN,KAAK,KAAK,KAAV,GACGO;IACGN,QAAQ,EAAEA,QAAQ,CAAC,MAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEA,QAAP,KAAmB,MAApB;EADrB,GAEMD,KAFN,CADH,GAKI,KANN;EAOA,IAAMQ,cAAc,GAClBT,KAAK,KAAK,KAAV,GACGQ;IACGN,QAAQ,EAAEA,QAAQ,CAAC,MAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEA,QAAP,KAAmB,QAApB;EADrB,GAEMF,KAFN,CADH,GAKI,KANN;EAQA,6BACKH,MADL,GACW;IACTC,OAAO,wBACFA,OADE,GACK;MACVY,MAAM,EAAEX,MADE;MAEVA,MAAM,EAAEW,MAFE;MAGV;MACAV,KAAK,EAAEO,YAJG;MAKVN,KAAK,EAAEQ;IALG,CADL;EADE,CADX;AAWD;AAED;;;;;;AAIA,SAASE,KAAT,CAAed,MAAf,EAAyC;EAC/B,WAAO,GAAKA,MAAM,QAAlB;EACA,SAAK,GAAKC,OAAO,MAAjB,CAF+B,CAGvC;;EACA,IAAIa,KAAK,IAAI,CAACA,KAAK,CAACT,QAApB,EAA8B;IAC5BS,KAAK,CAACT,QAAN,GAAiB,MAAjB,CAD4B,CAE5B;;IACA,IAAI,CAACS,KAAK,CAACC,MAAX,EAAmB;MACjBD,KAAK,CAACC,MAAN,GAAe,CACb;QAAEC,IAAI,EAAE;MAAR,CADa,EAEb;QAAEA,IAAI,EAAE;MAAR,CAFa,EAGb;QAAEA,IAAI,EAAE;MAAR,CAHa,EAIb;QAAEA,IAAI,EAAE,eAAR;QAAyBC,GAAG,EAAE;UAAEC,MAAM,EAAE;QAAV;MAA9B,CAJa,CAAf;IAMD;EACF;;EAED,OAAOxB,UAAU,CAAC,EAAD,EAAKM,MAAL,EAAa;IAAEC,OAAO,EAAE;MAAEa,KAAK;IAAP;EAAX,CAAb,CAAjB;AACD;AAED;;;;;;AAIA,SAASK,MAAT,CAAgBnB,MAAhB,EAA0C;EAChC,WAAO,GAAKA,MAAM,QAAlB,CADgC,CAGxC;;EACQ,eAAW,GAAcC,OAAO,YAAhC;EAAA,IAAamB,OAAO,GAAKnB,OAAO,QAAhC;EACF,UAAM,GAAKA,OAAO,OAAlB;;EACN,IAAIoB,WAAJ,EAAiB;IACf,IAAIF,MAAM,KAAK,KAAf,EAAsB;MACpBA,MAAM;QACJd,QAAQ,EAAEe,OAAO,GAAG,UAAH,GAAgB;MAD7B,GAEAD,MAAM,IAAI,EAFV,CAAN;IAID;EACF,CAPD,MAOO;IACLA,MAAM,GAAG,KAAT;EACD;;EAED,OAAOzB,UAAU,CAAC,EAAD,EAAKM,MAAL,EAAa;IAAEC,OAAO,EAAE;MAAEkB,MAAM;IAAR;EAAX,CAAb,CAAjB;AACD;AAED;;;;;;AAIA,SAASG,UAAT,CAAoBtB,MAApB,EAA8C;EAC5C;EACQ,WAAO,GAAKA,MAAM,QAAlB;EACR,IAAMuB,iBAAiB,GAAG,CAAC;IAAEP,IAAI,EAAE;EAAR,CAAD,EAAwB;IAAEA,IAAI,EAAE;EAAR,CAAxB,EAA8CQ,MAA9C,CAAqDvB,OAAO,CAACqB,UAAR,IAAsB,EAA3E,CAA1B;EACA,OAAO5B,UAAU,CAAC,EAAD,EAAKM,MAAL,EAAa;IAAEC,OAAO,EAAE;MAAEqB,UAAU,EAAEC;IAAd;EAAX,CAAb,CAAjB;AACD;AAED;;;;;;AAIA,OAAM,SAAUE,QAAV,CAAmBzB,MAAnB,EAA6C;EACzC,SAAK,GAAcA,MAAM,MAAzB;EAAA,IAAOC,OAAO,GAAKD,MAAM,QAAzB;EAEA,YAAQ,GAA6DC,OAAO,SAA5E;EAAA,IAAUyB,aAAa,GAA8CzB,OAAO,cAA5E;EAAA,IAAyB0B,WAAW,GAAiC1B,OAAO,YAA5E;EAAA,IAAsC2B,WAAW,GAAoB3B,OAAO,YAA5E;EAAA,IAAmD4B,aAAa,GAAK5B,OAAO,cAA5E;EAER,OAAOJ,aAAa,CAClB;IACEiC,KAAK,OADP;IAEE7B,OAAO,wBACFA,OADE,GACK;MACV;MACA8B,WAAW,EAAEC,QAFH;MAGVC,gBAAgB,EAAEP,aAHR;MAIVQ,cAAc,EAAEP,WAJN;MAKVQ,cAAc,EAAEP,WALN;MAMVQ,gBAAgB,EAAEP;IANR,CADL;EAFT,CADkB,EAalB,IAbkB,CAApB;AAeD;AAED;;;;;AAIA,OAAM,SAAUjC,OAAV,CAAkBI,MAAlB,EAA4C;EAChD;EACA,OAAOL,IAAI,CAAqBI,cAArB,EAAqCe,KAArC,EAA4CK,MAA5C,EAAoD1B,OAApD,EAA6D6B,UAA7D,EAAyEG,QAAzE,CAAJ,CAAuFzB,MAAvF,CAAP;AACD","names":["tooltip","deepAssign","flow","adaptor","columnAdaptor","meta","defaultOptions","params","options","yField","xAxis","yAxis","position","left","right","top","bottom","verticalAxis","__assign","horizontalAxis","xField","label","layout","type","cfg","action","legend","isStack","seriesField","coordinate","coordinateOptions","concat","geometry","barWidthRatio","minBarWidth","maxBarWidth","barBackground","chart","columnStyle","barStyle","columnWidthRatio","minColumnWidth","maxColumnWidth","columnBackground"],"sources":["E:\\office_react\\Context_Practice\\Context-Frontent_practice\\node_modules\\@antv\\g2plot\\src\\plots\\bar\\adaptor.ts"],"sourcesContent":["import { Params } from '../../core/adaptor';\nimport { tooltip } from '../../adaptor/common';\nimport { deepAssign, flow } from '../../utils';\nimport { Axis } from '../../types';\nimport { adaptor as columnAdaptor } from '../column/adaptor';\nexport { meta } from '../column/adaptor';\nimport { BarOptions } from './types';\n\n/**\n * 处理默认配置项\n * 1. switch xField、 yField\n * 2. switch xAxis、 yAxis and adjust axis.position configuration\n */\nfunction defaultOptions(params: Params<BarOptions>): Params<BarOptions> {\n  const { options } = params;\n  const { xField, yField, xAxis, yAxis } = options;\n\n  const position = {\n    left: 'bottom',\n    right: 'top',\n    top: 'left',\n    bottom: 'right',\n  };\n\n  const verticalAxis =\n    yAxis !== false\n      ? {\n          position: position[yAxis?.position || 'left'],\n          ...yAxis,\n        }\n      : false;\n  const horizontalAxis =\n    xAxis !== false\n      ? {\n          position: position[xAxis?.position || 'bottom'],\n          ...xAxis,\n        }\n      : false;\n\n  return {\n    ...params,\n    options: {\n      ...options,\n      xField: yField,\n      yField: xField,\n      // 条形图 xAxis，yAxis 不可以做 deepAssign\n      xAxis: verticalAxis as Axis,\n      yAxis: horizontalAxis as Axis,\n    },\n  };\n}\n\n/**\n * label 适配器\n * @param params\n */\nfunction label(params: Params<BarOptions>): Params<BarOptions> {\n  const { options } = params;\n  const { label } = options;\n  // label of bar charts default position is left, if plot has label\n  if (label && !label.position) {\n    label.position = 'left';\n    // 配置默认的 label layout： 如果用户没有指定 layout 和 position， 则自动配置 layout\n    if (!label.layout) {\n      label.layout = [\n        { type: 'interval-adjust-position' },\n        { type: 'interval-hide-overlap' },\n        { type: 'adjust-color' },\n        { type: 'limit-in-plot', cfg: { action: 'hide' } },\n      ];\n    }\n  }\n\n  return deepAssign({}, params, { options: { label } });\n}\n\n/**\n * legend 适配器\n * @param params\n */\nfunction legend(params: Params<BarOptions>): Params<BarOptions> {\n  const { options } = params;\n\n  // 默认 legend 位置\n  const { seriesField, isStack } = options;\n  let { legend } = options;\n  if (seriesField) {\n    if (legend !== false) {\n      legend = {\n        position: isStack ? 'top-left' : 'right-top',\n        ...(legend || {}),\n      };\n    }\n  } else {\n    legend = false;\n  }\n\n  return deepAssign({}, params, { options: { legend } });\n}\n\n/**\n * coordinate 适配器\n * @param params\n */\nfunction coordinate(params: Params<BarOptions>): Params<BarOptions> {\n  // transpose column to bar 对角变换 & y 方向镜像变换\n  const { options } = params;\n  const coordinateOptions = [{ type: 'transpose' }, { type: 'reflectY' }].concat(options.coordinate || []);\n  return deepAssign({}, params, { options: { coordinate: coordinateOptions } });\n}\n\n/**\n * 柱形图适配器\n * @param params\n */\nexport function geometry(params: Params<BarOptions>) {\n  const { chart, options } = params;\n\n  const { barStyle, barWidthRatio, minBarWidth, maxBarWidth, barBackground } = options;\n\n  return columnAdaptor(\n    {\n      chart,\n      options: {\n        ...options,\n        // rename attrs as column\n        columnStyle: barStyle,\n        columnWidthRatio: barWidthRatio,\n        minColumnWidth: minBarWidth,\n        maxColumnWidth: maxBarWidth,\n        columnBackground: barBackground,\n      },\n    },\n    true\n  ) as Params<BarOptions>;\n}\n\n/**\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<BarOptions>): Params<BarOptions> {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow<Params<BarOptions>>(defaultOptions, label, legend, tooltip, coordinate, geometry)(params);\n}\n"]},"metadata":{},"sourceType":"module"}